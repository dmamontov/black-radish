# language: ru

@example @ssh
Функция: SSH

  Данная функция представляет собой примеры выполнения команд по ssh

  Правило: Подключение

    Сценарий: Пример подключение по ssh c паролем
      Пусть я открываю ssh соединение к '${SSH_HOST}:${SSH_PORT}' от имени '${SSH_USERNAME}' с паролем '${SSH_PASSWORD}'
      Тогда я закрываю ssh соединение

    Сценарий: Пример подключение по ssh c ключом
      Пусть я открываю ssh соединение к '${SSH_HOST}:${SSH_PORT}' от имени '${SSH_USERNAME}' с ключом '${SSH_PEM}'
      Тогда я закрываю ssh соединение

  Правило: Запуск команд

    Сценарий: Пример запуска команды
      Пусть я открываю ssh соединение к '${SSH_HOST}:${SSH_PORT}' от имени '${SSH_USERNAME}' с ключом '${SSH_PEM}'
      Тогда я запускаю команду 'echo "example"' по ssh
      Тогда я закрываю ssh соединение

    Сценарий: Пример запуска команды по ssh каждую секунду в течении указанного времени до появления содержимого
      Пусть я открываю ssh соединение к '${SSH_HOST}:${SSH_PORT}' от имени '${SSH_USERNAME}' с ключом '${SSH_PEM}'
      Затем менее чем через '10' секунд вывод ssh команды 'sleep 1 && printf "first\nsecond" && sleep 10 && echo "four"' содержит 'second'
      Тогда я закрываю ssh соединение

    @force
    Сценарий: Пример запуска команды в фоне
      Пусть я открываю ssh соединение к '${SSH_HOST}:${SSH_PORT}' от имени '${SSH_USERNAME}' с ключом '${SSH_PEM}'
      Тогда я запускаю ssh команду 'sleep 1 && echo "first" && sleep 1 && echo "second"' в фоне
      Затем я завершаю команду запущенную в фоне
      Затем я закрываю ssh соединение

    @force
    Сценарий: Пример запуска нескольких команд в фоне
      Пусть я открываю ssh соединение к '${SSH_HOST}:${SSH_PORT}' от имени '${SSH_USERNAME}' с ключом '${SSH_PEM}'

      Тогда я запускаю ssh команду 'sleep 1 && echo "first" && sleep 2 && echo "second"' в фоне
      И сохраняю идентификатор команды в переменную 'FIRST'

      Затем я запускаю ssh команду 'sleep 1 && echo "three" && sleep 5 && echo "four"' в фоне
      И сохраняю идентификатор команды в переменную 'SECOND'

      Затем я завершаю команду запущенную в фоне с идентификатором '${FIRST}'
      Затем я завершаю команду запущенную в фоне с идентификатором '${SECOND}'

  Правило: Результат выполнения команд

    Сценарий: Пример сохранения результата выполнения команды в переменную
      Пусть я открываю ssh соединение к '${SSH_HOST}:${SSH_PORT}' от имени '${SSH_USERNAME}' с ключом '${SSH_PEM}'
      Тогда я запускаю команду 'echo "first"' по ssh
      И сохраняю результат выполнения команды в переменную 'RESULT'
      И '${RESULT}' равно 'first'
      Тогда я закрываю ssh соединение

    Сценарий: Пример проверки кода выхода команды
      Пусть я открываю ssh соединение к '${SSH_HOST}:${SSH_PORT}' от имени '${SSH_USERNAME}' с ключом '${SSH_PEM}'
      Когда я запускаю команду 'echo "first"' по ssh
      Тогда код выхода команды должен быть '0'
      Тогда я закрываю ssh соединение

    Сценарий: Пример проверки результата выполнения команды
      Пусть я открываю ssh соединение к '${SSH_HOST}:${SSH_PORT}' от имени '${SSH_USERNAME}' с ключом '${SSH_PEM}'
      Когда я запускаю команду 'ls -a' по ssh
      Тогда результат выполнения команды соответствует:
        """
        .
        ..
        .ssh
        logs
        ssh_host_keys
        sshd.pid
        """

    @force
    Сценарий: Пример проверки результата выполнения команды в фоне без прерывания процесса
      Пусть я открываю ssh соединение к '${SSH_HOST}:${SSH_PORT}' от имени '${SSH_USERNAME}' с ключом '${SSH_PEM}'
      Тогда я запускаю ssh команду 'sleep 1 && echo "first"' в фоне
      И я жду '1' секунды
      Затем я завершаю команду запущенную в фоне
      Тогда код выхода команды должен быть '0'
      И результат выполнения команды соответствует:
        """
        first
        """

    @force
    Сценарий: Пример проверки результата выполнения команды в фоне с прерыванием процесса через 1 секунду
      Пусть я открываю ssh соединение к '${SSH_HOST}:${SSH_PORT}' от имени '${SSH_USERNAME}' с ключом '${SSH_PEM}'
      Тогда я запускаю ssh команду 'sleep 1 && echo "first" && sleep 1 && echo "second"' в фоне
      И я жду '1' секунды
      Затем я завершаю команду запущенную в фоне
      Тогда код выхода команды должен быть '143'
      И результат выполнения команды соответствует:
        """
        first
        """

    @force
    Сценарий: Пример проверки результата нескольких команд в фоне
      Пусть я открываю ssh соединение к '${SSH_HOST}:${SSH_PORT}' от имени '${SSH_USERNAME}' с ключом '${SSH_PEM}'

      Тогда я запускаю ssh команду 'sleep 1 && echo "first" && sleep 2 && echo "second"' в фоне
      И сохраняю идентификатор команды в переменную 'FIRST'

      Затем я запускаю ssh команду 'sleep 2 && printf "three\nfour" && sleep 5 && echo "five"' в фоне
      И сохраняю идентификатор команды в переменную 'SECOND'

      Пусть я жду '3' секунды

      Затем я завершаю команду запущенную в фоне с идентификатором '${FIRST}'
      Тогда код выхода команды должен быть '0'
      И результат выполнения команды соответствует:
        """
        first
        second
        """

      Затем я завершаю команду запущенную в фоне с идентификатором '${SECOND}'
      Тогда код выхода команды должен быть '143'
      И результат выполнения команды соответствует:
        """
        three
        four
        """

  Правило: SFTP

    Сценарий: Пример загрузки файла через sftp
      Пусть я открываю ssh соединение к '${SSH_HOST}:${SSH_PORT}' от имени '${SSH_USERNAME}' с ключом '${SSH_PEM}'
      Затем я загружаю файл 'artifacts/upload/example.txt' по sftp как '/app/example.txt'

      Тогда я запускаю команду '[ -f "/app/example.txt" ] && echo true || echo false' по ssh
      И сохраняю результат выполнения команды в переменную 'RESULT'
      Тогда '${RESULT}' равно 'true'

      Затем я запускаю команду 'rm -rf /app/example.txt' по ssh
      Тогда я закрываю ssh соединение

    Сценарий: Пример скачивания файла через sftp
      Пусть я открываю ssh соединение к '${SSH_HOST}:${SSH_PORT}' от имени '${SSH_USERNAME}' с ключом '${SSH_PEM}'
      Затем я запускаю команду 'echo "DOWNLOAD" > /app/example.txt' по ssh

      Затем я скачиваю файл '/app/example.txt' по sftp как 'artifacts/download/example.txt'
      Тогда файл 'artifacts/download/example.txt' существует
      Затем я удаляю файл 'artifacts/download/example.txt'

      Затем я запускаю команду 'rm -rf /app/download.txt' по ssh
      Тогда я закрываю ssh соединение
