<config>
    <searches>

        <!-- in this case, we have a CSV (space delimited file) so we define the line once, and then reuse it over
        and again fr each value -->
        <search id="QUERY-LINE"><![CDATA[{ipAddress}\s+{numbers}(\s+\S+){5}\s+({numbersThenText})\s+{status}]]></search>


        <!-- Some rules for finding text, to make the values a little easier below -->
        <search id="numbers"><![CDATA[(\d+)]]></search>
        <search id="numbersThenText"><![CDATA[(\d+\S+)]]></search>
        <search id="stringToEOL"><![CDATA[{string}{EOL}]]></search>
        <search id="string"><![CDATA[(\S+?)]]></search>
        <search id="ipAddress"><![CDATA[(\d+(\.\d+){3})]]></search>
        <search id="status"><![CDATA[((\d+)|(\D.*))]]></search>
        <search id="EOL"><![CDATA[[\n\r]]]></search>


    </searches>
    <!-- There is a record per line -->
    <delim per-line="true" />

    <!--
    This is the last line of the header
     -->
    <header-delim><![CDATA[Neighbor\s+AS\s+MsgRcvd\s+MsgSent\s+TblVer\s+InQ\s+OutQ\s+Up/Down\s+State/Pfx]]></header-delim>
    <!--
    This scans the document up to and including the header delim, and then includes these into every record
    These values are included in every record
    -->
    <header>
        <value id="routerId"><![CDATA[BGP router identifier {string},]]></value>
        <value id="localAS"><![CDATA[BGP router identifier \S*?, local AS number {numbers}]]></value>
    </header>
    <values>
        <!-- here we reuse the line pattern, only we pull out different group values -->
        <value id="remoteIp" group="1"><![CDATA[{QUERY-LINE}]]></value>
        <value id="remoteAS" group="3"><![CDATA[{QUERY-LINE}]]></value>
        <value id="uptime" group="5"><![CDATA[{QUERY-LINE}]]></value>
        <value id="status" group="7"><![CDATA[{QUERY-LINE}]]></value>
    </values>
</config>