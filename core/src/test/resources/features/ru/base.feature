# language: ru

@example
Функция: Базовый функционал

  Данная функция представляет собой примеры базового функционала

  Правило: Поток

    Сценарий: Пример ожидания
      Допустим я жду '1' секунду

  Правило: Переменные

    Сценарий: Примеры операций сравнения
      Если '100' равно '100'
      И 'example' равно 'example'

      И '200' соответствует '^\d+'
      И 'example' соответствует '^[A-Za-z]+'

      И '100' содержит '10'
      И 'example' содержит 'ex'

      И '100' не равно '200'
      И 'example' не равно 'ex'

      И '100.1' больше '100'
      И '200' меньше '200.2'
      И '0xAF' меньше '176'

    Сценарий: Пример создания переменной
      Если я сохраняю 'example' в переменной 'ONE'
      Тогда '${ONE}' равно 'example'

    Сценарий: Примеры приведения строк к верхнему регистру
      Если я сохраняю 'example_one' в переменной 'ONE'
      Тогда '${upper:${ONE}}' равно 'EXAMPLE_ONE'

      Если '${upper:example_two}' равно 'EXAMPLE_TWO'

    Сценарий: Примеры приведения строк к нижнему регистру
      Если я сохраняю 'EXAMPLE_ONE' в переменной 'ONE'
      Тогда '${lower:${ONE}}' равно 'example_one'

      Если '${lower:EXAMPLE_TWO}' равно 'example_two'

    Сценарий: Пример получения переменной из common.properties
      #Note: к примеру для получения переменной из test.properties добавьте к примеру -Denv=test
      Если '${FOUR}' равно '4'

    Сценарий: Примеры использования математических операций
      #Note: подробнее https://www.objecthunter.net/exp4j/
      Если '${math:2+2*2-2}' равно '4.0'
      И '${math:3*sin(3.14)-2/(2.3-2)}' равно '-6.66188870791721'
      И '${math:3log(3.14)/(2.3+1)}' равно '1.0402025453819654'

    Сценарий: Примеры генерации фейковых данных
      #Note: подробнее https://github.com/DiUS/java-faker
      Если '${faker:internet.email_address}' соответствует '^[\w-\.]+@([\w-]+\.)+[\w-]{2,4}$'

      И '${faker:number.number_between '1','10'}' меньше '11'
      И '${faker:lorem.characters '6','true'}' соответствует '^[\w\d]{6}$'

      И '${faker:Name.first_name}' соответствует '^[A-Za-z]+$'
      И '${faker:ru:Name.first_name}' соответствует '^[А-Яа-яЁё]+$'

    Сценарий: Примеры вычисления выражений
      #Note: выражения пишутся на языке kotlin
      Если '${eval:1>2}' соответствует 'false'
      И '${eval:1+2}' соответствует '3'
      И '${eval:listOf(1, 2).joinToString("-")}' соответствует '1-2'

  Правило: Условный оператор

    Сценарий: Примеры использования условных операторов if, elseif, else
      #Note: условие пишется на языке kotlin
      Допустим я сохраняю '${faker:number.random_double '0','1','5'}' в переменной 'NUMBER'

      * Если '${NUMBER} == 1.0':
      Тогда '${NUMBER}' равно '1.0'
      * Иначе Если '${NUMBER} == 2.0':
      Тогда '${NUMBER}' равно '2.0'
      * Иначе Если '${NUMBER} == 3.0':
      Тогда '${NUMBER}' равно '3.0'
      * Иначе:
      Тогда '${NUMBER}' больше '3.0'
      * Конец Если

      * Если '${NUMBER} == 1.0':
      Тогда '${NUMBER}' равно '1.0'
      * Иначе Если '${NUMBER} == 2.0':
      Тогда '${NUMBER}' равно '2.0'
      * Иначе:
      Тогда '${NUMBER}' больше '2.0'
      * Конец Если

      * Если '${NUMBER} == 1.0':
      Тогда '${NUMBER}' равно '1.0'
      * Иначе:
      Тогда '${NUMBER}' больше '1.0'
      * Конец Если

      * Если '${NUMBER} == 1.0':
      Тогда '${NUMBER}' равно '1.0'
      * Иначе Если '${NUMBER} == 2.0':
      Тогда '${NUMBER}' равно '2.0'
      * Конец Если

  Правило: Генерация шагов

    Сценарий: Пример подключения сценария из текущей функции
      Если я сохраняю 'example_two' в переменной 'ONE'
      Тогда '${ONE}' равно 'example_two'

      Если я подключаю сценарий 'Пример создания переменной'
      Тогда '${ONE}' равно 'example'

    Сценарий: Пример подключения сценария из другой функции
      Если я сохраняю 'example_two' в переменной 'ONE'
      Тогда '${ONE}' равно 'example_two'

      Если я подключаю сценарий 'Подключаемый сценарий' из функции 'classpath:features/ru/include.feature'
      Тогда '${ONE}' равно 'include'

    Сценарий: Пример подключения сценария из другой функции
      Если я сохраняю 'example_two' в переменной 'ONE'
      Тогда '${ONE}' равно 'example_two'

      Если я подключаю сценарий 'Подключаемый сценарий' из функции 'classpath:features/ru/include.feature'
      Тогда '${ONE}' равно 'include'

    Сценарий: Пример подключения сценария с подключением вложенного сценария
      #Note: максимальную глубину(aspect.include.depth) можно сконфигурировать в файле setting.properties
      Если я сохраняю 'example_two' в переменной 'ONE'
      Тогда '${ONE}' равно 'example_two'

      Если я подключаю сценарий 'Подключаемый сценарий с вложенным сценарием' из функции 'classpath:features/ru/include.feature'
      Тогда '${ONE}' равно 'depth'

    Сценарий: Пример циклической генерации кода от и до
      * Цикл от '1' до '5':
        * Если '${loop.value} == 1':
            Тогда '${loop.value}' равно '1'
        * Иначе Если '${loop.value} == 2':
            Тогда '${loop.value}' равно '2'
        * Иначе Если '${loop.value} == 3':
            Тогда '${loop.value}' равно '3'
        * Иначе:
            Тогда '${loop.value}' больше '3'
        * Конец Если
      * Конец Цикла

    Сценарий: Пример циклической генерации кода от и до в обратном порядке
      * Цикл от '10' до '5':
        * Если '${loop.value} == 10':
            Тогда '${loop.value}' равно '10'
        * Иначе Если '${loop.value} == 9':
            Тогда '${loop.value}' равно '9'
        * Иначе Если '${loop.value} == 8':
            Тогда '${loop.value}' равно '8'
        * Иначе:
            Тогда '${loop.value}' меньше '8'
        * Конец Если
      * Конец Цикла

    Сценарий: Пример циклической генерации из списка
      * Цикл из 'first,second,three':
        * Если '"${loop.value}" == "first"':
            Тогда '${loop.value}' равно 'first'
        * Иначе Если '"${loop.value}" == "second"':
            Тогда '${loop.value}' равно 'second'
        * Иначе Если '"${loop.value}" == "three"':
            Тогда '${loop.value}' равно 'three'
        * Конец Если
      * Конец Цикла

    Сценарий: Пример циклической генерации из списка с использованием переменной
      Когда я сохраняю 'example' в переменной 'ONE'
      * Цикл из '${ONE},second,three':
        * Если '"${loop.value}" == "example"':
            Тогда '${loop.value}' равно 'example'
        * Иначе Если '"${loop.value}" == "second"':
            Тогда '${loop.value}' равно 'second'
        * Иначе Если '"${loop.value}" == "three"':
            Тогда '${loop.value}' равно 'three'
        * Конец Если
      * Конец Цикла